/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */
plugins {
    id "application"
}
mainClassName = 'Main'
 
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'java-library'

ext {
    mainClass = "Main"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()

    // for EIP
    maven {
        url "https://repo.eclipse.org/content/repositories/paho-releases/"
    }
    maven{
        url ="http://artifactory.es.uni-due.de:8081/artifactory/libs-release"
    }
}

jar {
	archiveBaseName = 'digitalTwin'
	archiveVersion = '0.0.1'
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    implementation group: 'org.testng', name: 'testng', version: '6.14.3'

    //for java REST
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.30.1'
    implementation 'org.glassfish.jersey.containers:jersey-container-jdk-http:2.30.1'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.30.1'
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3' //for Java 9 and newer
	
	implementation group: 'org.json', name: 'json', version: '20200518'

    implementation 'org.xerial:sqlite-jdbc:3.31.1'

    // for EIP
    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    compile group: 'de.ude.es', name: 'MQTTMessageQueue', version: '1.0.0'
    compile group: 'de.ude.es', name: 'orchestration-utilities', version: '1.0.1'
    compile group: 'de.ude.es', name: 'twin-interface', version: '1.1.1'
    compile group: 'org.apache.jena', name: 'apache-jena-libs', version: '3.8.0'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta2'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
}

test {
    useTestNG()
}

task runMain(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = mainClass
}

task runDigitalTwinIoTDevice(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "DigitalTwin.DigitalTwinIoTDevice"
}
